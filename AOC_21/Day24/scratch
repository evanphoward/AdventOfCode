# I did this day entirely by hand using the notes that exist in this text file
# inp[4] + 5 == inp[7]
# inp[1] - 1 == inp[8]
# inp[10] + 8 == inp[11]
# inp[9] - 2 == inp[12]
# inp[0] - 8 == inp[13]
# 99394899891971
# 92171126131911

inp w
eql x 0
add y w # y = w
add y 6 # y = inp[0] + 6
add z y # z = inp[0] + 6

1
inp w
mul x 0 # x = 0
add x z # x = inp[0] + 6
mod x 26 # x = (inp[0] + 6) % 26
add x 13 # x = ((inp[0] + 6) % 26) + 13
eql x w # x = (((inp[0] + 6) % 26) + 13) == inp[1]
eql x 0 # x = (inp[0] + 19) != inp[1]
mul y 0 # y = 0
add y 25 # y = 25
mul y x # y = 25
add y 1 # y = 26
mul z y # z = 26 * (inp[0] + 6)
mul y 0
add y w # y = inp[1]
add y 14 # y = inp[1] + 14
mul y x # y = inp[1] + 14
add z y # z = 26(inp[0] + 6) + (inp[1] + 14)

2
inp w
mul x 0
add x z
mod x 26
div z 1
add x 15
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1 # y = 26
mul z y # z = 26(26(inp[0] + 6) + (inp[1] + 14))
mul y 0
add y w # y = inp[2]
add y 14 # y = inp[2] + 14
mul y x
add z y # 26(26(inp[0] + 6) + (inp[1] + 14)) + (inp[2] + 14)

3
inp w
mul x 0
add x z
mod x 26 # x = inp[2] + 14
div z 26 # z = 26(inp[0] + 6) + (inp[1] + 14)
add x -8 # x = inp[2] + 6
eql x w
eql x 0 # if inp[3] == (inp[2] + 6): 0 else: 1
mul y 0
add y 25
mul y x
add y 1 # y = 1
mul z y
mul y 0
add y w
add y 10
mul y x
add z y # z = 26(inp[0] + 6) + (inp[1] + 14)

4
inp w
mul x 0
add x z
mod x 26 # x = (inp[2] + 14)
div z 1
add x 13
eql x w
eql x 0 # x = 1
mul y 0
add y 25
mul y x
add y 1 # y = 26
mul z y # z = 26(26(inp[0] + 6) + (inp[1] + 14))
mul y 0
add y w
add y 9 # y = inp[4] + 9
mul y x
add z y # z = 26(26(inp[0] + 6) + (inp[1] + 14)) + (inp[4] + 9)

5
inp w
mul x 0
add x z
mod x 26 # x = inp[4] + 9
div z 1
add x 15
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y # z = 26(26(26(inp[0] + 6) + (inp[1] + 14)) + (inp[4] + 9))
mul y 0
add y w
add y 12 # y = inp[5] + 12
mul y x
add z y # z = 26(26(26(inp[0] + 6) + (inp[1] + 14)) + (inp[4] + 9)) + (inp[5] + 12)

6
inp w
mul x 0
add x z
mod x 26 # x = inp[5] + 12
div z 26 # z = 26(26(inp[0] + 6) + (inp[1] + 14)) + (inp[4] + 9)
add x -11
eql x w
eql x 0 # if inp[6] == (inp[5] + 1): 0 else: 1
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 8
mul y x
add z y # 26(26(inp[0] + 6) + (inp[1] + 14)) + (inp[4] + 9)

7
inp w
mul x 0
add x z
mod x 26 # x = inp[4] + 9
div z 26 # z = 26(inp[0] + 6) + (inp[1] + 14)
add x -4 # inp[4] + 5 == inp[7]
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 13
mul y x
add z y # 26(inp[0] + 6) + (inp[1] + 14)

8
inp w
mul x 0
add x z
mod x 26 # x = inp[1] + 14
div z 26 # z = inp[0] + 6
add x -15 # inp[1] - 1
eql x w # inp[8] = inp[1] - 1
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 12
mul y x
add z y # inp[0] + 6

9
inp w
mul x 0
add x z
mod x 26
div z 1
add x 14
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y # z = 26(inp[0] + 6)
mul y 0
add y w
add y 6
mul y x
add z y # 26(inp[0] + 6) + (inp[9] + 6)

10
inp w
mul x 0
add x z
mod x 26
div z 1
add x 14
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 9
mul y x
add z y # 26(26(inp[0] + 6) + (inp[9] + 6)) + (inp[10] + 9)

11
inp w
mul x 0
add x z
mod x 26 # inp[10] + 9
div z 26 # 26(inp[0] + 6) + (inp[9] + 6)
add x -1 # inp[10] + 8
eql x w # inp[10] + 8 = inp[11]
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 15
mul y x
add z y # 26(inp[0] + 6) + (inp[9] + 6)

12
inp w
mul x 0 #
add x z
mod x 26 # inp[9] + 6
div z 26 # inp[0] + 6
add x -8 # inp[9] - 2
eql x w # inp[9] - 2 == inp[12]
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 4
mul y x
add z y # inp[0] + 6

inp w # inp[13] == inp[0] - 8
mul x 0
add x z # x = z
mod x 26 # x = z % 26
div z 26 # z = z // 26
add x -14 # x = z - 14
eql x w
eql x 0 # x = (inp[13] != z - 14)
mul y 0
add y 25 # y = 25
mul y x
add y 1
mul z y # y = z * y
mul y 0
add y w # y = (-z/x) - 10 - inp[13]
add y 10 # y = (-z/x) - 10
mul y x # y = -z/x
add z y # y = -z